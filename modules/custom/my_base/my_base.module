<?php
// error_reporting(E_ALL);
// ini_set('display_errors', TRUE);
// ini_set('display_startup_errors', TRUE);
/**
 * @file
 * my_base module file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\node\Entity\Node;
use Drupal\Core\Database\Database;
use Drupal\Core\Render\Markup;
use Drupal\oo_common\Helper\CommonHelper;
use Drupal\my_base\Functions\CommonFunc;


/**
 * Implements hook_theme().
 */
function my_base_theme($existing, $type, $theme, $path) {

  $themes = [];
  $themes['home_page'] = [
    'variables' => ['params' => NULL],
    'template' => 'layout/home-page',
  ];

  $themes['list_news'] = [
    'variables' => ['params' => NULL],
    'template' => 'layout/list-news',
  ];

  $themes['project_all_page'] = [
    'variables' => ['params' => NULL],
    'template' => 'layout/project-all-page',
  ];

  /* Admin Management */
  $themes['content_management'] = [
    'variables' => ['params' => NULL],
    'template' => 'layout/admin/content-management',
  ];
  /* End Admin Management */

  $blocks = [
    'header_block',
    'footer_block',
    'topcommon_block',
    'right_menu_block',
  ];
  if (!empty($blocks)) {
    foreach ($blocks as $item) {
      $themes[$item] = [
        'variables' => ['params' => NULL],
        'template' => 'block/' . $item,
      ];
    }
  }

  return $themes;
}

function my_base_node_view(array &$build, EntityInterface $node, EntityViewDisplayInterface $display, $view_mode) {

  switch ($node->getEntityTypeId()) {
    case 'node':
      $build = func_handle_entity_node($build, $node, $view_mode);
      break;

    default:
      # code...
      break;
  }
}


function my_base_preprocess_views_view(&$variables) {


}

/**
 * Implements hook_mail().
 */
function my_base_mail($key, &$message, $params) {
}



/**
 * Implements hook_entity_update().
 */
function my_base_entity_update(EntityInterface $entity) {


}

/**
 * Implements hook_entity_delete().
 */
function my_base_entity_delete(EntityInterface $entity) {

}


/**
 * Implements my_base_form_alter().
 */
function my_base_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $current_path = \Drupal::service('path.current')->getPath();
  $addContentViews = get_add_content_link_views();
  
  if(in_array($current_path, CommonFunc::eco_get_menu_link_management()) && array_key_exists($form_id, $addContentViews)) {
    $url = Url::fromUri('internal:/node/add/' . $addContentViews[$form_id], array('query' => \Drupal::destination()->getAsArray()));
    $htmlAdd = '<ul class="action-links">
         <li>
             <a href="' . $url->toString() . '" class="button button-action button--primary button--small">
                 ' . t('Add content') . '
             </a>
         </li>
     </ul>';
    $form['#prefix'] = $htmlAdd;
  }
    
}

function my_base_user_login($account) {
  if($account->id() > 0) {
    $url = "/admin";
    $response = new Symfony\Component\HttpFoundation\RedirectResponse($url);
    $response->send();
  }
}

/**
 * Implements hook_page_attachments_alter().
 */
function my_base_page_attachments_alter(array &$attachments) {

  foreach ($attachments['#attached']['html_head'] as $key => $attachment) {
    if (isset($attachment[1]) && $attachment[1] == 'system_meta_generator') {
      unset($attachments['#attached']['html_head'][$key]);
    }
  }
}

function func_handle_entity_node(array &$build, $entity, $view_mode){

  if($view_mode ==  'full'){
    $node_type = $entity->bundle();
    switch ($node_type) {
      case 'home':
        $object = new \Drupal\my_base\Controller\HomeController();
        $var = $object->get_data($entity);
        $build['#params'] = $var['#params'];
        $build['#theme'] = $var['#theme'];
        break;

      default:
        # code...
        break;
    }
  }

  return $build;

}

/**
 * Get add content link view names.
 */
function get_add_content_link_views() {

  return [
    'views_form_home_management_page_1' => 'home',
    'views_form_about_us_management_page_1' => 'about_us',
    'views_form_recruiment_management_page_1' => 'recruiment',
    'views_form_field_operation_management_page_1' => 'field_operation',
    'views_form_projects_management_page_1' => 'projects',
    'views_form_partners_management_page_1' => 'partners',
    'views_form_talent_management_page_1' => 'talent',
    'views_form_news_management_page_1' => 'news',
  ];
}
