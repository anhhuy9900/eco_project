<?php

/**
 * @file
 * Preprocess functions for eco.
*/

use Drupal\Component\Utility\Xss;
use Drupal\Core\Template\Attribute;
use Drupal\image\Entity\ImageStyle;
use Drupal\node\Entity\Node;
use Drupal\views\Views;

function eco_preprocess(&$variables, $hook){

}

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function eco_preprocess_html(&$variables) {

}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function eco_preprocess_node(&$variables) {
  if(isset($variables['node'])) {
    $node = $variables['node'];

  }
}

function eco_preprocess_page(&$variables) {
  $variables['images_path'] = base_path() . drupal_get_path('theme','eco') . '/images';
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function eco_preprocess_block(&$variables) {
    $variables['is_front'] = 1;
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function eco_preprocess_menu(&$variables) {

}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function eco_theme_suggestions_form_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_form_alter() to add classes to the search form.
 */
function eco_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

}

/**
 * Implements hook_css_alter() to alter CSS files before they are output on the page.
 *
 * @param $css
 *   An array of all CSS items (files and inline CSS) being requested on the page.
 * @param \Drupal\Core\Asset\AttachedAssetsInterface $assets
 *   The assets attached to the current response.
 *
 * @see Drupal\Core\Asset\LibraryResolverInterface::getCssAssets()
 */
function eco_css_alter(&$css, \Drupal\Core\Asset\AttachedAssetsInterface $assets) {
  foreach ($css as $filename => $info) {
    if(strpos($filename, 'core/') === 0) {
      unset($css[$filename]);
    }
  }
}

/**
 * Implements hook_js_alter() to perform necessary alterations to the JavaScript before it is presented on
 * the page.
 *
 * @param $javascript
 *   An array of all JavaScript being presented on the page.
 * @param \Drupal\Core\Asset\AttachedAssetsInterface $assets
 *   The assets attached to the current response.
 *
 * @see drupal_js_defaults()
 * @see \Drupal\Core\Asset\AssetResolver
 */
function eco_js_alter(&$javascript, \Drupal\Core\Asset\AttachedAssetsInterface $assets) {
  foreach ($javascript as $filename => $info) {
    if(strpos($filename, 'core/') === 0) {
      unset($javascript[$filename]);
    }
  }
}
