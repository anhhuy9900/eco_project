<?php

/**
 * @file
 * Functions to support theming in the btw theme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function btw2017_preprocess_html(&$variables) {

  // Add information about the number of sidebars.
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'layout-two-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['attributes']['class'][] = 'layout-one-sidebar';
    $variables['attributes']['class'][] = 'layout-sidebar-first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'layout-one-sidebar';
    $variables['attributes']['class'][] = 'layout-sidebar-second';
  }
  else {
    $variables['attributes']['class'][] = 'layout-no-sidebars';
  }

  if (!empty($variables['page']['featured_top'])) {
    $variables['attributes']['class'][] = 'has-featured-top';
  }

}

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function btw2017_preprocess(&$variables) {

  $variables['base_path'] = base_path();
  $variables['footer_facebook_link'] = theme_get_setting('footer_facebook_link');
  $variables['footer_twitter_link'] = theme_get_setting('footer_twitter_link');
  $variables['footer_instagram_link'] = theme_get_setting('footer_instagram_link');
  $variables['footer_copyright'] = theme_get_setting('footer_copyright');
  $variables['footer_contact'] = theme_get_setting('footer_contact');

 /* $page_article_banner = theme_get_setting('page_article_banner');
  if(isset($page_article_banner[0]) && $page_article_banner[0]) {
    $top_banner = \Drupal\oo_common\Helper\FileHelper::getImagePathByFid($page_article_banner[0], 'top_banner');
    $variables['page_article_banner'] = $top_banner;
  } else {
    $variables['page_article_banner'] = false;
  }

  $variables['page_article_title'] = theme_get_setting('page_article_title');*/
}

/**
 * Implements hook_preprocess_block().
 */
function btw2017_preprocess_block(&$variables) {

}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function btw2017_preprocess_page_title(&$variables) {
  // Since the title and the shortcut link are both block level elements,
  // positioning them next to each other is much simpler with a wrapper div.
  if (!empty($variables['title_suffix']['add_or_remove_shortcut']) && $variables['title']) {
    // Add a wrapper div using the title_prefix and title_suffix render
    // elements.
    $variables['title_prefix']['shortcut_wrapper'] = [
      '#markup' => '<div class="shortcut-wrapper clearfix">',
      '#weight' => 100,
    ];
    $variables['title_suffix']['shortcut_wrapper'] = [
      '#markup' => '</div>',
      '#weight' => -99,
    ];
    // Make sure the shortcut link is the first item in title_suffix.
    $variables['title_suffix']['add_or_remove_shortcut']['#weight'] = -100;
  }
}

/**
 * Implements hook_preprocess_HOOK() for maintenance-page.html.twig.
 */
function btw2017_preprocess_maintenance_page(&$variables) {
  // By default, site_name is set to Drupal if no db connection is available
  // or during site installation. Setting site_name to an empty string makes
  // the site and update pages look cleaner.
  // @see template_preprocess_maintenance_page
  if (!$variables['db_is_active']) {
    $variables['site_name'] = '';
  }

  // btw has custom styling for the maintenance page.
  $variables['#attached']['library'][] = 'btw2017/maintenance_page';
}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function btw2017_preprocess_node(&$variables) {

  // Remove the "Add new comment" link on teasers or when the comment form is
  // displayed on the page.
  if ($variables['teaser'] || !empty($variables['content']['comments']['comment_form'])) {
    unset($variables['content']['links']['comment']['#links']['comment-add']);
  }
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function btw2017_preprocess_menu(&$variables, $hook) {
  
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function btw2017_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if ($variables['element']['#form_id'] == 'search_block_form') {
    $suggestions[] = 'form__search_block_form';
  }
}


function btw2017_preprocess_input(&$variables) {
  /*$element = $variables['element'];
  // Remove name attribute if empty, for W3C compliance.
  if (isset($variables['attributes']['name']) && empty((string) $variables['attributes']['name'])) {
    //unset($variables['attributes']['name']);
  }
  $variables['children'] = $element['#children'];*/
}

/**
 * Implements hook_form_alter() to add classes to the search form.
 */
function btw2017_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['search_block_form', 'search_form'])) {
    $key = ($form_id == 'search_block_form') ? 'actions' : 'basic';
    if (!isset($form[$key]['submit']['#attributes'])) {
      $form[$key]['submit']['#attributes'] = new Attribute();
    }
    $form[$key]['submit']['#attributes']->addClass('search-form__submit');
  }
}
